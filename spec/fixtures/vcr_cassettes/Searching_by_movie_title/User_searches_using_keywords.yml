---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=<MOVIEDB_API_KEY>&language=en-US&page=1&query=whatever
    body:
      encoding: US-ASCII
      string: ''
    headers:
      X-Api-Key:
      - "<MOVIEDB_API_KEY>"
      User-Agent:
      - Faraday v1.0.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Sat, 10 Oct 2020 17:41:07 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=120
      Vary:
      - Accept-Encoding
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 48a6ccbb0ddb052ab512a3422295bd39.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - Wyi1ZikbpRAjYMLbfeV2ftWTZ4XGFshEZMTzBO6tF-tVrhmZnGt78g==
      Age:
      - '78'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJwYWdlIjoxLCJ0b3RhbF9yZXN1bHRzIjo2OSwidG90YWxfcGFnZXMiOjQsInJlc3VsdHMiOlt7InBvcHVsYXJpdHkiOjE1LjQ3Niwidm90ZV9jb3VudCI6MTE2NSwidmlkZW8iOmZhbHNlLCJwb3N0ZXJfcGF0aCI6IlwvdFNoRkJYMmV1ZHprQ1p3NUVuQjJacUxhUFNRLmpwZyIsImlkIjoxOTI2NSwiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiXC9tcW5hcUtXUmVmdHhFRDZMUEdMVERtTWpXQ1kuanBnIiwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiV2hhdGV2ZXIgV29ya3MiLCJnZW5yZV9pZHMiOlszNSwxMDc0OV0sInRpdGxlIjoiV2hhdGV2ZXIgV29ya3MiLCJ2b3RlX2F2ZXJhZ2UiOjcuMSwib3ZlcnZpZXciOiJXaGF0ZXZlciBXb3JrcyBleHBsb3JlcyB0aGUgcmVsYXRpb25zaGlwIGJldHdlZW4gYSBjcm90Y2hldHkgbWlzYW50aHJvcGUsIEJvcmlzIGFuZCBhIG5hw692ZSwgaW1wcmVzc2lvbmFibGUgeW91bmcgcnVuYXdheSBmcm9tIHRoZSBzb3V0aCwgTWVsb2R5LiBXaGVuIE1lbG9keSdzIHVwdGlnaHQgcGFyZW50cyBhcnJpdmUgaW4gTmV3IFlvcmsgdG8gcmVzY3VlIGhlciwgdGhleSBhcmUgcXVpY2tseSBkcmF3biBpbnRvIHdpbGRseSB1bmV4cGVjdGVkIHJvbWFudGljIGVudGFuZ2xlbWVudHMuIEV2ZXJ5b25lIGRpc2NvdmVycyB0aGF0IGZpbmRpbmcgbG92ZSBpcyBqdXN0IGEgY29tYmluYXRpb24gb2YgbHVja3kgY2hhbmNlIGFuZCBhcHByZWNpYXRpbmcgdGhlIHZhbHVlIG9mIFwid2hhdGV2ZXIgd29ya3MuXCIiLCJyZWxlYXNlX2RhdGUiOiIyMDA5LTA2LTE5In0seyJwb3B1bGFyaXR5IjoxMi44ODYsInZvdGVfY291bnQiOjE1OSwidmlkZW8iOmZhbHNlLCJwb3N0ZXJfcGF0aCI6IlwvYW80Um9HWEM5d29XYzdoclJ0RFJSeURiQ0psLmpwZyIsImlkIjoxNjIyMiwiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiXC93ajFvc3JFR0Nid05POUR2MGF1dlZEWmJOOHkuanBnIiwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiV2hhdGV2ZXIgSXQgVGFrZXMiLCJnZW5yZV9pZHMiOlszNSwxOCwxMDc0OV0sInRpdGxlIjoiV2hhdGV2ZXIgSXQgVGFrZXMiLCJ2b3RlX2F2ZXJhZ2UiOjUuNiwib3ZlcnZpZXciOiJBIG5lcmR5IHRlZW4sIFJ5YW4gV29vZG1hbiBpcyBzbWl0dGVuIHdpdGggdGhlIHBvcHVsYXIgYW5kIGdvcmdlb3VzIEFzaGxleSBHcmFudCwgd2hvIGFwcGFyZW50bHkgaGFzIG5vIGludGVyZXN0IGluIGhpbS4gTWVhbndoaWxlLCBkaW0gc3RhciBhdGhsZXRlIENocmlzIENhbXBiZWxsIGhhcyBoaXMgZXllIG9uIFJ5YW4ncyBicmFpbnkgYW5kIGJlYXV0aWZ1bCBmcmllbmQsIE1hZ2dpZSBDYXJ0ZXIuIFRoZSB0d28gYWdyZWUgdG8gaGVscCBlYWNoIG90aGVyIGluIHRoZWlyIHJvbWFudGljIHF1ZXN0cywgYnV0LCBhcyB0aGV5IGNvbWUgY2xvc2VyIHRvIHRoZWlyIGdvYWxzLCBib3RoIFJ5YW4gYW5kIENocmlzIHN1c3BlY3QgdGhhdCB0aGV5IG1pZ2h0IGJlIHB1cnN1aW5nIHRoZSB3cm9uZyBnaXJscy4iLCJyZWxlYXNlX2RhdGUiOiIyMDAwLTAzLTMxIn0seyJwb3B1bGFyaXR5Ijo0LjU0MSwiaWQiOjI4NDM3NCwidmlkZW8iOmZhbHNlLCJ2b3RlX2NvdW50IjoxMSwidm90ZV9hdmVyYWdlIjo1LCJ0aXRsZSI6IkxvdmUgb3IgV2hhdGV2ZXIiLCJyZWxlYXNlX2RhdGUiOiIyMDEyLTEwLTIzIiwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiTG92ZSBvciBXaGF0ZXZlciIsImdlbnJlX2lkcyI6WzM1XSwiYmFja2Ryb3BfcGF0aCI6IlwvbEtOcFN1b0xTd1ByNVAweVhneENCbjhTaVNtLmpwZyIsImFkdWx0IjpmYWxzZSwib3ZlcnZpZXciOiJDb3JleSBoYWQgaXQgYWxsIC0gYSBzdWNjZXNzZnVsIGNhcmVlciwgYmFncyBvZiBjaGFybSBhbmQsIG1vc3Qgb2YgYWxsLCBhIGJyaWdodCBmdXR1cmUgd2l0aCBoaXMgYm95ZnJpZW5kLiBCdXQsIHdoZW4gaGlzIG90aGVyIGhhbGYgY29tbWl0cyB0aGUgdWx0aW1hdGUgYmV0cmF5YWwgYW5kIGR1bXBzIGhpbSBmb3IgYSB3b21hbiwgaGUgZW1iYXJrcyB1cG9uIGEgd2lsZCBqb3VybmV5IG9mIHNlbGYtZGlzY292ZXJ5LiBTb29uLCBoZSBtZWV0cyBhIHBvdGVudGlhbGx5IHBlcmZlY3QgbmV3IGd1eSBidXQgZmlyc3QgaGUgbmVlZHMgdG8gbWFrZSBzb21lIGxpZmUtY2hhbmdpbmcgY2hvaWNlcy4iLCJwb3N0ZXJfcGF0aCI6IlwvalBMUU10WjhKS0RCMzRtd2J2ZzJFYVNmeU5vLmpwZyJ9LHsicG9wdWxhcml0eSI6My4zOTQsInZvdGVfY291bnQiOjQsInZpZGVvIjpmYWxzZSwicG9zdGVyX3BhdGgiOiJcL3JMcjBHOEFRWmIyY3F0VnI5U1BsQk9hUXdiWS5qcGciLCJpZCI6MTAyMzA0LCJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOm51bGwsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IldoYXRldmVyIiwiZ2VucmVfaWRzIjpbMThdLCJ0aXRsZSI6IldoYXRldmVyIiwidm90ZV9hdmVyYWdlIjo3LjQsIm92ZXJ2aWV3IjoiQSBOZXcgSmVyc2V5IHRlZW4gZmFjZXMgaGVyIGltcGVuZGluZyBhZHVsdGhvb2QsIGRyZWFtaW5nIG9mIGEgbGlmZSBhcyBhIHN1Y2Nlc3NmdWwgTmV3IFlvcmsgYXJ0aXN0LiBCdXQgd2hlbiBzaGUgZ2V0cyBjYXVnaHQgdXAgaW4gdGhlIGNhcmVmcmVlIHNwb3J0IG9mIHByZS1BSURTIHNleCBhbmQgZHJ1Z3MsIGhlciBmdXR1cmUgYmVjb21lcyBsZXNzIGNlcnRhaW4uIiwicmVsZWFzZV9kYXRlIjoiMTk5OC0wNy0xMCJ9LHsicG9wdWxhcml0eSI6NC45MzgsInZvdGVfY291bnQiOjE4LCJ2aWRlbyI6ZmFsc2UsInBvc3Rlcl9wYXRoIjoiXC9oTXRCV1RHVHYxYUw5a0lyOXRNdjF3Vk84Z0YuanBnIiwiaWQiOjE3NDk1LCJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOm51bGwsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IldoYXRldmVyIExvbGEgd2FudHMiLCJnZW5yZV9pZHMiOlsxOF0sInRpdGxlIjoiV2hhdGV2ZXIgTG9sYSB3YW50cyIsInZvdGVfYXZlcmFnZSI6Ni4zLCJvdmVydmlldyI6IkEgQnJvb2tseW4gcG9zdGFsIHdvcmtlciBmb2xsb3dzIGhlciBFZ3lwdGlhbiBib3lmcmllbmQgdG8gQ2Fpcm8gd2hlcmUgc2hlIHRha2VzIGJlbGx5LWRhbmNpbmcgbGVzc29ucyBmcm9tIGEgbGVnZW5kYXJ5IGJ1dCBkaXNncmFjZWQgRWd5cHRpYW4gZGFuY2VyLiIsInJlbGVhc2VfZGF0ZSI6IjIwMDctMTItMTEifSx7InBvcHVsYXJpdHkiOjQuOTY2LCJ2b3RlX2NvdW50IjoxMSwidmlkZW8iOmZhbHNlLCJwb3N0ZXJfcGF0aCI6IlwvaVhZemRwUUVkUG5qMXJ6dWN2WnlVT3FGd3pMLmpwZyIsImlkIjo0OTkyMiwiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjpudWxsLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJXaGF0ZXZlciBIYXBwZW5lZCB0byBIYXJvbGQgU21pdGg/IiwiZ2VucmVfaWRzIjpbMzVdLCJ0aXRsZSI6IldoYXRldmVyIEhhcHBlbmVkIHRvIEhhcm9sZCBTbWl0aD8iLCJ2b3RlX2F2ZXJhZ2UiOjYuNSwib3ZlcnZpZXciOiJJdCdzIDE5NzYsIGFuZCBWaW5ueSBpcyBhIGNvbmZ1c2VkIHRlZW5hZ2VyIHdobyBjYW4ndCBkZWNpZGUgd2hldGhlciBoZSBpcyBhIGRpc2NvIGtpbmcgb3IgYSBwcm90byBwdW5rIHJvY2tlci4iLCJyZWxlYXNlX2RhdGUiOiIyMDAwLTAzLTEwIn0seyJwb3B1bGFyaXR5IjoyLjQ4NiwiaWQiOjUzNzI0NCwidmlkZW8iOmZhbHNlLCJ2b3RlX2NvdW50IjowLCJ2b3RlX2F2ZXJhZ2UiOjAsInRpdGxlIjoiRG93biBmb3IgV2hhdGV2ZXIiLCJyZWxlYXNlX2RhdGUiOiIyMDE4LTA3LTIyIiwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiRG93biBmb3IgV2hhdGV2ZXIiLCJnZW5yZV9pZHMiOlsyOF0sImJhY2tkcm9wX3BhdGgiOiJcL2ZiSUxTVHFWaUFpS25hWXFlY0lOQ1JSWkozWS5qcGciLCJhZHVsdCI6ZmFsc2UsIm92ZXJ2aWV3IjoiQSB5b3VuZyBhbmQgc3VjY2Vzc2Z1bCBkb2N0b3IgaXMgc2hvY2tlZCB0byBsZWFybiBoZXIgdHdvIHNpc3RlcnMgYXJlIHN1c3BlY3RlZCBvZiBraWxsaW5nIGEgY29wLiIsInBvc3Rlcl9wYXRoIjoiXC9sRmRwVVVwZmVNR09hbUZmbDJKQ3dLa3RENTQuanBnIn0seyJwb3B1bGFyaXR5IjoyLjIwOCwiaWQiOjM2ODI0LCJ2aWRlbyI6ZmFsc2UsInZvdGVfY291bnQiOjEsInZvdGVfYXZlcmFnZSI6OCwidGl0bGUiOiJDYXJsIEJhcnJvbjogV2hhdGV2ZXIgQ29tZXMgTmV4dCIsInJlbGVhc2VfZGF0ZSI6IjIwMDUtMDgtMjIiLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJDYXJsIEJhcnJvbjogV2hhdGV2ZXIgQ29tZXMgTmV4dCIsImdlbnJlX2lkcyI6WzM1XSwiYmFja2Ryb3BfcGF0aCI6bnVsbCwiYWR1bHQiOmZhbHNlLCJvdmVydmlldyI6IkZlYXR1cmVzIG92ZXIgYW4gaG91ciBvZiBoaXMgYXdhcmQtd2lubmluZyBzaG93IHBsdXMgc3BlY2lhbCBiZWhpbmQtdGhlLXNjZW5lcyBmb290YWdlIHRha2luZyB5b3Ugb24gYSBqb3VybmV5IHlvdSB3aWxsIG5ldmVyIGZvcmdldCIsInBvc3Rlcl9wYXRoIjoiXC82b0JYazk0MWhzc2JOOVZvODlSZzBjT3F1U0UuanBnIn0seyJwb3B1bGFyaXR5IjozLjI5NCwidm90ZV9jb3VudCI6MCwidmlkZW8iOmZhbHNlLCJwb3N0ZXJfcGF0aCI6bnVsbCwiaWQiOjQyMjUwMCwiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjpudWxsLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJCYXJyeSBDcmltbWluczogV2hhdGV2ZXIgVGhyZWF0ZW5zIFlvdSIsImdlbnJlX2lkcyI6WzM1XSwidGl0bGUiOiJCYXJyeSBDcmltbWluczogV2hhdGV2ZXIgVGhyZWF0ZW5zIFlvdSIsInZvdGVfYXZlcmFnZSI6MCwib3ZlcnZpZXciOiJGb2xsb3dpbmcgZnJvbSBCb2JjYXQgR29sZHRod2FpdCdzIHJldmVsYXRvcnkgZG9jdW1lbnRhcnksIENhbGwgTWUgTHVja3ksIEJhcnJ5IENyaW1taW5zJyBmcmllbmQgTG91aXMgQ0sgcHJvZHVjZWQgYW5kIGRpcmVjdGVkIFdoYXRldmVyIFRocmVhdGVucyBZb3UsIGhpcyBmaXJzdCBjb21lZHkgc3BlY2lhbCwgYXQgdGhlIExhd3JlbmNlIEFydHMgQ2VudGVyIGluIExhd3JlbmNlLCBLYW5zYXMgaW4gSnVuZSA0dGgsIDIwMTYuIEl0IHdhcyB0aGVuIHN1YnNlcXVlbnRseSBtYWRlIGF2YWlsYWJsZSBmb3IgZG93bmxvYWQgb24gTG91aXMgQ0sncyB3ZWJzaXRlIG9uIE9jdG9iZXIgMjNyZCwgMjAxNi4gIFRoZSBob3VyLWxvbmcgc3BlY2lhbCBpcyBhIHNoYXJwIHNldCBvZiB0aGUgYml0aW5nIHNvY2lhbCBhbmQgcG9saXRpY2FsIGNvbW1lbnRhcnkgdGhhdCBoYXMgZGVmaW5lZCBDcmltbWlucycgY2FyZWVyLCB0b3VjaGluZyB1cG9uIGhpcyBiZWdpbm5pbmdzIGluIGhlbHBpbmcgdG8gZm91bmQgdGhlIEJvc3RvbiBjb21lZHkgc2NlbmUsIHJpZ2h0IHVwIHRvIGhpcyB0aG91Z2h0cyBvbiB0aGUgdXBjb21pbmcgMjAxNiBVUyBlbGVjdGlvbi4iLCJyZWxlYXNlX2RhdGUiOiIyMDE2LTEwLTIzIn0seyJwb3B1bGFyaXR5IjoxLjc1NywiaWQiOjExMjQ0OSwidmlkZW8iOmZhbHNlLCJ2b3RlX2NvdW50Ijo4LCJ2b3RlX2F2ZXJhZ2UiOjUuMSwidGl0bGUiOiJXaGF0ZXZlciBXZSBEbyIsInJlbGVhc2VfZGF0ZSI6IjIwMDMtMDEtMTYiLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJXaGF0ZXZlciBXZSBEbyIsImdlbnJlX2lkcyI6WzM1LDE4XSwiYmFja2Ryb3BfcGF0aCI6bnVsbCwiYWR1bHQiOmZhbHNlLCJvdmVydmlldyI6IlR3ZW50eSBtYXJnYXJpdGFzIGFuZCAxMCBzaG90cyBvZiB0ZXF1aWxhLCB3aXRoIGEgZmV3IG91bmNlcyBvZiBkZWJhdWNoZXJ5LCBicmluZyBmb3VyIGZyaWVuZHMgY2xvc2VyIHRvIHRoZSB0cnV0aCB0aGFuIHRoZXkgaGF2ZSBiZWVuIGZvciB5ZWFycy4iLCJwb3N0ZXJfcGF0aCI6bnVsbH0seyJwb3B1bGFyaXR5IjoxLjYyNywiaWQiOjMyOTIyMywidmlkZW8iOmZhbHNlLCJ2b3RlX2NvdW50Ijo0LCJ2b3RlX2F2ZXJhZ2UiOjUuNSwidGl0bGUiOiJXaGF0ZXZlciBTaGUgV2FudHMiLCJyZWxlYXNlX2RhdGUiOiIyMDEwLTAyLTAyIiwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiV2hhdGV2ZXIgU2hlIFdhbnRzIiwiZ2VucmVfaWRzIjpbXSwiYmFja2Ryb3BfcGF0aCI6bnVsbCwiYWR1bHQiOmZhbHNlLCJvdmVydmlldyI6IldoYXRldmVyIFNoZSBXYW50cyBpcyB0aGUgc3RvcnkgYWJvdXQgb25lIHdvbWFuIHMgZGV0ZXJtaW5hdGlvbiB0byByZWRpc2NvdmVyIHdobyBzaGUgcmVhbGx5IGlzLi4uIFZpdmlhbiBXb2xmIChWaXZpY2EgQS4gRm94KSBoYXMgc3VmZmVyZWQgb25lIGhlYXJ0YnJlYWsgdG9vIG1hbnkgYW5kIGhhcyBubyByb29tIGxlZnQgZm9yIHVuZnVsZmlsbGluZyByZWxhdGlvbnNoaXBzLiBOb3cgc2hlIGhhcyBjb21lIHVwIHdpdGggdGhlIHNvbHV0aW9uIHRvIGV2ZXJ5IHdvbWFuIHMgcHJvYmxlbSwgYSBwcml2YXRlIGNsdWIgY2FsbGVkIFdoYXRldmVyIFNoZSBXYW50cyB3aGVyZSBtZW4gaGF2ZSB0byBxdWFsaWZ5IHRvIGdldCBpbi4iLCJwb3N0ZXJfcGF0aCI6IlwvZVdSVmpiT0R0RUdpQzI0UmdDQmVQUjhWUEplLmpwZyJ9LHsicG9wdWxhcml0eSI6Mi41NDcsInZvdGVfY291bnQiOjAsInZpZGVvIjpmYWxzZSwicG9zdGVyX3BhdGgiOiJcL2VlV2hKWU1KSDNMWDdNTXBvU3pBeFhBRHJIVi5qcGciLCJpZCI6NjY3ODcwLCJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiJcL2hKMkpKZXo2cjlEQkxyck9QTlZkbktwUzJiNC5qcGciLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJDb25ub3IgTWNEYXZpZDogV2hhdGV2ZXIgaXQgVGFrZXMiLCJnZW5yZV9pZHMiOls5OV0sInRpdGxlIjoiQ29ubm9yIE1jRGF2aWQ6IFdoYXRldmVyIGl0IFRha2VzIiwidm90ZV9hdmVyYWdlIjowLCJvdmVydmlldyI6IkNvbm5vciBNY0RhdmlkOiBXaGF0ZXZlciBpdCBUYWtlcyBmb2xsb3dzIHRoZSBtb3N0IHBoeXNpY2FsbHkgYW5kIGVtb3Rpb25hbGx5IGNoYWxsZW5naW5nIG9mZnNlYXNvbiBvZiBDb25ub3IgTWNEYXZpZCdzIGNhcmVlci4gVGhpcyBkb2N1bWVudGFyeSBpcyB0aGUgcmVtYXJrYWJsZSBjb21lYmFjayBzdG9yeSBvZiBvbmUgb2YgdGhlIE5ITCdzIGJlc3QgcGxheWVycyBhZnRlciB3aGF0IGNvdWxkIGhhdmUgYmVlbiBhIGNhcmVlciBlbmRpbmcgb3IgYWx0ZXJpbmcgaW5qdXJ5LiBBIHdvcmxkLWNsYXNzIG1lZGljYWwgdGVhbSBsZWQgYnkgTWFyayBMaW5kc2F5LCBzdXBlcnZpc2VkIE1jRGF2aWQncyBncnVlbGxpbmcgcmVoYWJpbGl0YXRpb24gcHJvZ3JhbSB3aGljaCBjb21iaW5lZCBhZHZhbmNlZCBzcG9ydCBzY2llbmNlIGFuZCBpbWFnaW5nIHRlY2huaXF1ZXMgd2l0aCBDb25ub3IncyBzaGVlciB3aWxsIHRvIG92ZXJjb21lLCBhbGxvd2luZyBoaW0gdG8gcmV0dXJuIHRvIHRoZSBFZG1vbnRvbiBPaWxlcnMgbGluZXVwIGZvciB0aGUgMjAxOS0yMCBob21lIG9wZW5lci4gTWNEYXZpZCBub3Qgb25seSBjYW1lIGJhY2ssIGJ1dCBpcyBmYXN0ZXIgYW5kIHN0cm9uZ2VyIHRoYW4gZXZlciBhbmQgaGF2aW5nIHRoZSBiZXN0IHNlYXNvbiBvZiBoaXMgeW91bmcgY2FyZWVyLiBNY0RhdmlkIGVudGVycyB0aGUgMjAyMCBBbGwtU3RhciBicmVhayBsZWFkaW5nIHRoZSBOSEwgaW4gc2NvcmluZywgYW5kIGhhcyBoaXMgRWRtb250b24gT2lsZXJzIGluIHRoZSBodW50IGZvciAxc3QgUGxhY2UgaW4gdGhlIFBhY2lmaWMgRGl2aXNpb24uIiwicmVsZWFzZV9kYXRlIjoiMjAyMC0wMS0yNCJ9LHsicG9wdWxhcml0eSI6MS40Miwidm90ZV9jb3VudCI6NSwidmlkZW8iOmZhbHNlLCJwb3N0ZXJfcGF0aCI6IlwvM3pmNFNPc2VMYm9udVdKbmRyeGlIT1hBa2JtLmpwZyIsImlkIjo0OTgwNjgsImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6IlwvYW5KRmN0N05OQUVBUjlxRUlIZldaTnRlbTlaLmpwZyIsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZGUiLCJvcmlnaW5hbF90aXRsZSI6IldoYXRldmVyIEhhcHBlbnMgTmV4dCIsImdlbnJlX2lkcyI6WzM1LDE4XSwidGl0bGUiOiJXaGF0ZXZlciBIYXBwZW5zIE5leHQiLCJ2b3RlX2F2ZXJhZ2UiOjcsIm92ZXJ2aWV3IjoiQSByb2FkIG1vdmllIGFib3V0IGEgZHJvcG91dCB3aG8gbGVhdmVzIGhpbXNlbGYgY29tcGxldGVseSB0byBjaGFuY2UuIEEgcGFyYWJsZSBhYm91dCBmcmVlZG9tLCBzZWxmLWRldGVybWluYXRpb24gYW5kIHRoZSBwb2V0cnkgb2YgYW4gdW5kZWZpbmVkIGxpZmUuIiwicmVsZWFzZV9kYXRlIjoiMjAxOC0wMi0yMSJ9LHsicG9wdWxhcml0eSI6MS40LCJ2b3RlX2NvdW50IjowLCJ2aWRlbyI6ZmFsc2UsInBvc3Rlcl9wYXRoIjpudWxsLCJpZCI6NzM4MTAyLCJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOm51bGwsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IkdsYXNzIEhhbGYgV2hhdGV2ZXIiLCJnZW5yZV9pZHMiOltdLCJ0aXRsZSI6IkdsYXNzIEhhbGYgV2hhdGV2ZXIiLCJ2b3RlX2F2ZXJhZ2UiOjAsIm92ZXJ2aWV3IjoiT24gYSB3aW50ZXJ5LCBnbG9vbXksIGltcGVyZmVjdCBkYXksIEkgZmlsbGVkIGEgZ2xhc3MgaGFsZndheSB3aXRoIHdhdGVyIGFuZCBwbGFjZWQgaXQgb24gdGhlIGJlYWNoLiBXaGVuIHlvdSBsb29rIGF0IHRoZSBnbGFzcywgaXMgaXQgaGFsZiBlbXB0eSBvciBoYWxmIGZ1bGw/IEkgc2F5LCB3aGF0ZXZlci4iLCJyZWxlYXNlX2RhdGUiOiIyMDIwLTEwLTA4In0seyJwb3B1bGFyaXR5IjoxLjE3NSwidm90ZV9jb3VudCI6MiwidmlkZW8iOmZhbHNlLCJwb3N0ZXJfcGF0aCI6IlwvdDdYdEpOclNReU0xaUdmTXNUaGZKZmZWbEtFLmpwZyIsImlkIjoxMjE4MzcsImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6bnVsbCwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiV2hhdGV2ZXIgaXQgVGFrZXMiLCJnZW5yZV9pZHMiOlsyOCwzNSw1M10sInRpdGxlIjoiV2hhdGV2ZXIgaXQgVGFrZXMiLCJ2b3RlX2F2ZXJhZ2UiOjYuNSwib3ZlcnZpZXciOiJUd28gTG9zIEFuZ2VsZXMgY29wcyBnbyB1bmRlcmNvdmVyIHRvIGludmVzdGlnYXRlIHRoZSBkaXN0cmlidXRpb24gb2Ygc3Rlcm9pZHMgdG8gd3Jlc3RsZXJzIGFuZCBib2R5IGJ1aWxkZXJzLiIsInJlbGVhc2VfZGF0ZSI6IjE5OTgtMDEtMDEifSx7InBvcHVsYXJpdHkiOjEuMDE0LCJ2b3RlX2NvdW50Ijo0LCJ2aWRlbyI6ZmFsc2UsInBvc3Rlcl9wYXRoIjoiXC9tY0RKazBWY01JeEpEZFVYMjdkNnZxZ1BsNUwuanBnIiwiaWQiOjQyNTIxNSwiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiXC9rTGJpUzV5TXZ1QWMyNmMzYXhGWUcyZGF5OWguanBnIiwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJkZSIsIm9yaWdpbmFsX3RpdGxlIjoiV2hhdGV2ZXIgSGFwcGVucyIsImdlbnJlX2lkcyI6WzM1LDE4LDEwNzQ5XSwidGl0bGUiOiJXaGF0ZXZlciBIYXBwZW5zIiwidm90ZV9hdmVyYWdlIjo3LjMsIm92ZXJ2aWV3IjoiSGFubmFoIGFuZCBKdWxpYW4gaGF2ZSBzZXBhcmF0ZWQgYW5kIG1lZXQgZm9yIGEgbGFzdCB0aW1lIHRvIGVtcHR5IG91dCB0aGVpciBzaGFyZWQgYXBhcnRtZW50LiBCdXQgbm90aGluZyBnb2VzIGFzIHBsYW5uZWQsIGFuZCB0aGVpciBsYXN0IG5pZ2h0IHRvZ2V0aGVyIGJlY29tZXMgYSB0dXJidWxlbnQgcm9sbGVyLWNvYXN0ZXIgcmlkZS4iLCJyZWxlYXNlX2RhdGUiOiIyMDE3LTExLTMwIn0seyJwb3B1bGFyaXR5IjowLjk1MywiaWQiOjI4ODIxNywidmlkZW8iOmZhbHNlLCJ2b3RlX2NvdW50IjoxLCJ2b3RlX2F2ZXJhZ2UiOjYsInRpdGxlIjoiV2hhdGV2ZXIgTG92ZSBNZWFucyIsInJlbGVhc2VfZGF0ZSI6IjIwMDUtMTItMDUiLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJXaGF0ZXZlciBMb3ZlIE1lYW5zIiwiZ2VucmVfaWRzIjpbXSwiYmFja2Ryb3BfcGF0aCI6bnVsbCwiYWR1bHQiOmZhbHNlLCJvdmVydmlldyI6IlN0cmFwIGluIGZvciBhIHJvbGxlcmNvYXN0ZXIgcmlkZSB0aHJvdWdoIHRoZSBlbW90aW9uYWwgd29ybGRzIG9mIGxvdmUgYW5kIHJveWFsdHkgaW4gYW4gb3JpZ2luYWwgV0UgQ2hhbm5lbCBtb3ZpZSBleHBsb3JpbmcgdGhlIGVuZHVyaW5nLCAzMC15ZWFyIHJvbWFuY2Ugc2hhcmVkIGJldHdlZW4gUHJpbmNlIENoYXJsZXMgYW5kIENhbWlsbGEgUGFya2VyLUJvd2xlcy4gRGVjYWRlcyBiZWZvcmUgdGhlIGZhaXJ5IHRhbGUgd2VkZGluZyBvZiBQcmluY2UgQ2hhcmxlcyBhbmQgTGFkeSBEaWFuYSwgdGhlIHlvdW5nIHByaW5jZSBhbmQgaGlzIGxvbmd0aW1lIHN3ZWV0aGVhcnQgZm91bmQgdGhlaXIgZ3Jvd2luZyBsb3ZlIHRyYWdpY2FsbHkgY2xpcHBlZCBieSB0aGUgbWFueSBkZW1hbmRzIG9mIHJveWFsdHkgYW5kIHRoZSBzb21ldGltZXMgcm91Z2ggd2F0ZXJzIG9mIHJvbWFuY2UuIFRob3VnaCBoZSBoYWQgcHJldmlvdXNseSBleGNoYW5nZWQgdm93cyB3aXRoIHRoZSBnbGFtb3JvdXMgRGlhbmEsIFByaW5jZSBDaGFybGVzIG5ldmVyIHRydWx5IGZvcmdvdCBhYm91dCBQYXJrZXItQm93bGVzLCBhbmQgaW4gdGhpcyBmaWxtIEFuZ2xvcGhpbGVzIGFuZCByb3lhbHR5IHNjaG9sYXJzIGFsaWtlIHdpbGwgZmluYWxseSBsZWFybiB0aGUgdHJ1dGggYmVoaW5kIG9uZSBvZiB0aGUgaGlnaGVzdCBwcm9maWxlIHJvbWFuY2VzIGluIG1vZGVybiBoaXN0b3J5LiIsInBvc3Rlcl9wYXRoIjpudWxsfSx7InBvcHVsYXJpdHkiOjAuNjI3LCJpZCI6MzM2NzczLCJ2aWRlbyI6ZmFsc2UsInZvdGVfY291bnQiOjEsInZvdGVfYXZlcmFnZSI6OC41LCJ0aXRsZSI6IldoYXRldmVyIENvbWVzIE5leHQiLCJyZWxlYXNlX2RhdGUiOiIyMDE0LTExLTIzIiwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiV2hhdGV2ZXIgQ29tZXMgTmV4dCIsImdlbnJlX2lkcyI6Wzk5LDM2XSwiYmFja2Ryb3BfcGF0aCI6bnVsbCwiYWR1bHQiOmZhbHNlLCJvdmVydmlldyI6IldoYXRldmVyIENvbWVzIE5leHQgaXMgYSBkb2N1bWVudGFyeSBhYm91dCB0aGUgY3VyaW91cyBhbmQgZHluYW1pYyBsaWZlIG9mIEFubmVtYXJpZSBNYWhsZXItRXR0aW5nZXIuXHIgVGhlIGZpbG0gcG9ydHJheXMgdGhlIHBhaW50ZXIgYW5kIHNjaG9sYXIsIEFubmVtYXJpZSBNYWhsZXIuIEJvcm4gaW4gVmllbm5hIGluIDE5MjYsIE1haGxlciBmbGVkIGJ5IGhlcnNlbGYgYXMgYSB0d2VsdmUteWVhciBjaGlsZCB0byB0aGUgVW5pdGVkIFN0YXRlcyBhbmQgaGFzIHNpbmNlIDE5NTUgaGFzIGxpdmVkIGluIEJsb29taW5ndG9uLCBJTiwgYW5kIGluIHRoZSBzdW1tZXJzIGluIFdvb2RzIEhvbGUsIE1BLiAgVGhlIGRvY3VtZW50YXJ5IHBvcnRyYXlzIHRoZSBhcnRpc3QncyBvdXRlciBhbmQgaW5uZXIgbGl2ZXMsIHdoaWNoIGJyaWRnZSB0d28gY2VudHVyaWVzIGFuZCB0d28gY29udGluZW50cy4iLCJwb3N0ZXJfcGF0aCI6bnVsbH0seyJwb3B1bGFyaXR5IjoxLjQwMywidm90ZV9jb3VudCI6MiwidmlkZW8iOmZhbHNlLCJwb3N0ZXJfcGF0aCI6bnVsbCwiaWQiOjIwMDAyNywiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjpudWxsLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJXaGF0ZXZlciBIYXBwZW5lZCB0byBNYXNvbiBSZWVzZSIsImdlbnJlX2lkcyI6WzM1LDE4XSwidGl0bGUiOiJXaGF0ZXZlciBIYXBwZW5lZCB0byBNYXNvbiBSZWVzZSIsInZvdGVfYXZlcmFnZSI6Mi41LCJvdmVydmlldyI6Ik9uZSBvZiB0aGUgZWFybHkgc2hvcnQgZmlsbXMgb2YgZGlyZWN0b3IgQnJldHQgUmF0bmVyLiIsInJlbGVhc2VfZGF0ZSI6IjE5OTAtMDEtMDEifSx7InBvcHVsYXJpdHkiOjAuNiwiaWQiOjI0ODA3MywidmlkZW8iOmZhbHNlLCJ2b3RlX2NvdW50IjowLCJ2b3RlX2F2ZXJhZ2UiOjAsInRpdGxlIjoiV2hhdEV2ZXIgV2lsbCBCZSIsInJlbGVhc2VfZGF0ZSI6IjIwMTMtMDUtMjYiLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJXaGF0RXZlciBXaWxsIEJlIiwiZ2VucmVfaWRzIjpbOTldLCJiYWNrZHJvcF9wYXRoIjpudWxsLCJhZHVsdCI6ZmFsc2UsIm92ZXJ2aWV3IjoiVHdvIHRyYW5zZ2VuZGVyIHdvbWVuLCBhIGZpbG1tYWtlciBhbmQgdGhlIHN0cnVnZ2xlIHRvIGNoYW5nZS4iLCJwb3N0ZXJfcGF0aCI6bnVsbH1dfQ==
  recorded_at: Sat, 10 Oct 2020 17:42:25 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=<MOVIEDB_API_KEY>&language=en-US&page=2&query=whatever
    body:
      encoding: US-ASCII
      string: ''
    headers:
      X-Api-Key:
      - "<MOVIEDB_API_KEY>"
      User-Agent:
      - Faraday v1.0.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Sat, 10 Oct 2020 17:41:07 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=120
      Vary:
      - Accept-Encoding
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 dcee1124728af441beff75c95d9d9d74.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - uQq1edNjghJHy2KCPcfq5-9AWolkvsirG8Xp40urFbQTaxMjYYQKjQ==
      Age:
      - '78'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sat, 10 Oct 2020 17:42:25 GMT
recorded_with: VCR 6.0.0
